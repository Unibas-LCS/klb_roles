# ansible managed

# function to unset every env var related to lmod/modules
# this is required to swap between the different software stacks
# as each of them provides their own Lmod installation and custom vars
unset-modules-env () {
        # unload every loaded module to unset all their env vars
        module --force purge
        # unset lmod functions and vars
        unset -f ml
        unset -f module
        unset "${!LMOD@}"
        unset "${!__LMOD@}"
        unset "${!MODULE@}"
        unset "${!_ModuleTable@}"
        # unset vars specific to ComputeCanada
        # __Init_Default_Modules is used by ComputeCanada to load default modules.
        # we unset it to make sure the default modules in computeCanada are loaded
        # when swapping accross stacks
        unset __Init_Default_Modules
        unset CC_CLUSTER
        unset "${!RSNT@}"
        # unset vars specific to EESSI
        unset "${!EESSI@}"
        unset EPREFIX
        unset LMOD_RC
        unset FPATH
}

enable-software-stack-scicore () {
    if [ -f /scicore/soft/lmod/lmod/init/profile ]; then
        # if $MODULEPATH is defined we assume we are comming from
        # a different soft stack and we disable the current modules env
        if [ -n "${MODULEPATH}" ]; then
          unset-modules-env
        fi
        # restore PS1 in case EESSI modified it
        if [ -n "${PS1_BEFORE_EESSI}" ]; then
          export PS1=${PS1_BEFORE_EESSI}
        fi
        # load the local scicore software stack
        export PATH=/scicore/soft/lmod/lmod/libexec:$PATH
        export MODULESROOTFOLDER=/scicore/soft/easybuild/modules
        source /scicore/soft/lmod/lmod/init/profile
        export MODULEPATH="${MODULESROOTFOLDER}/base:${MODULESROOTFOLDER}/ai:${MODULESROOTFOLDER}/astro:${MODULESROOTFOLDER}/bio:${MODULESROOTFOLDER}/cae:${MODULESROOTFOLDER}/chem:${MODULESROOTFOLDER}/compiler:${MODULESROOTFOLDER}/data:${MODULESROOTFOLDER}/debugger:${MODULESROOTFOLDER}/devel:${MODULESROOTFOLDER}/geo:${MODULESROOTFOLDER}/ide:${MODULESROOTFOLDER}/lang:${MODULESROOTFOLDER}/lib:${MODULESROOTFOLDER}/math:${MODULESROOTFOLDER}/mpi:${MODULESROOTFOLDER}/numlib:${MODULESROOTFOLDER}/perf:${MODULESROOTFOLDER}/quantum:${MODULESROOTFOLDER}/phys:${MODULESROOTFOLDER}/system:${MODULESROOTFOLDER}/toolchain:${MODULESROOTFOLDER}/tools:${MODULESROOTFOLDER}/vis"
    fi
}

enable-software-stack-compute-canada () {
    if [ -f /cvmfs/soft.computecanada.ca/config/profile/bash.sh ]; then
        # disable the current modules env
        unset-modules-env
        # restore PS1 in case EESSI modified it
        if [ -n "${PS1_BEFORE_EESSI}" ]; then
          export PS1=${PS1_BEFORE_EESSI}
        fi
        # here you can customize the ComputeCanada stack
        # https://docs.alliancecan.ca/wiki/Accessing_CVMFS#Customizing_your_environment
        #export RSNT_ARCH=""
        export RSNT_INTERCONNECT="ethernet"
        #export RSNT_CUDA_DRIVER_VERSION=""
        #export LMOD_SYSTEM_DEFAULT_MODULES=""
        # load ComputeCanada
        source /cvmfs/soft.computecanada.ca/config/profile/bash.sh
        #source /cvmfs/soft.computecanada.ca/config/profile/bash.sh &> /dev/null
        #module load gcc/9.1.0 python/3.8.2 &> /dev/null
    fi
  }

enable-software-stack-eessi () {
    if [ -f /cvmfs/software.eessi.io/versions/2023.06/init/bash ]; then
        export PS1_BEFORE_EESSI=${PS1}
        # disable the current modules env
        unset-modules-env
        # load EESSI
        source /cvmfs/software.eessi.io/versions/2023.06/init/bash
    fi
  }

# by default we enable the local software stack deployed by scicore
enable-software-stack-scicore